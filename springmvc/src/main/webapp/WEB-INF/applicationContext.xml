<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-2.0.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">
		
	<import resource="classpath:/META-INF/spring/appContext-mysql.xml" />
	<import resource="classpath:/META-INF/spring/appContext-Integration-SendMessageByGateway.xml" />
	<import resource="classpath:/META-INF/spring/appContext-Integration-MessageProcessor.xml" />
	<import resource="classpath:/META-INF/spring/headerMapperContext.xml" />
	<import resource="classpath:/META-INF/spring/appContext-spring-mybatis.xml" />
	
	<bean id="propertyConfigurer"
		class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer">
		<property name="properties" ref="properties" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	
	<!-- Import the batch configuration from a properties file. Some properties 
	will be directly set to bean configurations by using SpringEL. -->
	<bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true"/>
		<property name="locations">
			<list>
				<value>classpath:com/pss/properties/application.properties</value>
				<value>file:${EXTERNAL_PROPERTIES_DIR}/application.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:com/pss/i18n/messages</value>
				<!-- <value>file:${EXTERNAL_PROPERTIES_DIR}/messages</value> -->
			</list>
		</property>
		<property name="cacheSeconds" value="0" />
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	<!-- 目的地queue -->
	<jee:jndi-lookup id="remoteQueue" jndi-name="java:comp/env/${remote.testQueue}" />
	
	<!-- 生产者连接池（B和C节点） -->
	<jee:jndi-lookup id="remoteProducerConnectionFactory" jndi-name="java:comp/env/${remote.producer.queueManager}" />
	
	<!-- 消费者连接池（A, B和C三个节点） -->
	<jee:jndi-lookup id="remoteConsumerConnectFactory" jndi-name="java:comp/env/${remote.consumer.queueManager}" />
	
	<!-- back up queue -->
	<jee:jndi-lookup id="remoteBackUpQ" jndi-name="java:comp/env/${remote.backUpQueue}" />
	
	<!-- setup jms template -->
	<bean id="springJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="remoteProducerConnectionFactory" />
		<property name="defaultDestination" ref="remoteQueue" />
		<property name="pubSubDomain" value="false" />
		<property name="receiveTimeout" value="20000" />
		<property name="sessionTransacted" value="true" />
	</bean>
	
	<bean id="activeMqProducer" class="com.pss.utils.ActiveMqProducer">
		<property name="jmsTemplate" ref="springJmsTemplate"/>
	</bean>
	
	<!-- Override the default log4j file by external one -->
	<!-- 
	<bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>${log4j.config.location}</value>
			</list>
		</property>
	</bean>
	 -->
	<!-- JNDI -->
	<!-- 
	<jee:jndi-lookup id="projectVersion" jndi-name="java:comp/env/jms/${aa.VersionS}" />
	-->

</beans>